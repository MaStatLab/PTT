// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fitPTTcpp
Rcpp::List fitPTTcpp(arma::mat X, arma::mat Xnew, arma::mat Omega, int k, double rho0, int rho0_mode, int tran_mode, double lognu_lowerbound, double lognu_upperbound, int n_grid, int n_s, double beta, int n_post_samples);
RcppExport SEXP PTT_fitPTTcpp(SEXP XSEXP, SEXP XnewSEXP, SEXP OmegaSEXP, SEXP kSEXP, SEXP rho0SEXP, SEXP rho0_modeSEXP, SEXP tran_modeSEXP, SEXP lognu_lowerboundSEXP, SEXP lognu_upperboundSEXP, SEXP n_gridSEXP, SEXP n_sSEXP, SEXP betaSEXP, SEXP n_post_samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnew(XnewSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< double >::type rho0(rho0SEXP);
    Rcpp::traits::input_parameter< int >::type rho0_mode(rho0_modeSEXP);
    Rcpp::traits::input_parameter< int >::type tran_mode(tran_modeSEXP);
    Rcpp::traits::input_parameter< double >::type lognu_lowerbound(lognu_lowerboundSEXP);
    Rcpp::traits::input_parameter< double >::type lognu_upperbound(lognu_upperboundSEXP);
    Rcpp::traits::input_parameter< int >::type n_grid(n_gridSEXP);
    Rcpp::traits::input_parameter< int >::type n_s(n_sSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type n_post_samples(n_post_samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(fitPTTcpp(X, Xnew, Omega, k, rho0, rho0_mode, tran_mode, lognu_lowerbound, lognu_upperbound, n_grid, n_s, beta, n_post_samples));
    return rcpp_result_gen;
END_RCPP
}
// fitCondPTTcpp
Rcpp::List fitCondPTTcpp(arma::mat X, arma::mat Y, arma::mat Xnew, arma::mat Ynew, arma::mat Omega_X, arma::mat Omega_Y, int k_X, int k_Y, double rho0_X, int rho0_mode_X, double rho0_Y, int rho0_mode_Y, int tran_mode_Y, double lognu_lowerbound_Y, double lognu_upperbound_Y, int n_grid_Y, int n_s_Y, double beta_Y, int n_post_samples);
RcppExport SEXP PTT_fitCondPTTcpp(SEXP XSEXP, SEXP YSEXP, SEXP XnewSEXP, SEXP YnewSEXP, SEXP Omega_XSEXP, SEXP Omega_YSEXP, SEXP k_XSEXP, SEXP k_YSEXP, SEXP rho0_XSEXP, SEXP rho0_mode_XSEXP, SEXP rho0_YSEXP, SEXP rho0_mode_YSEXP, SEXP tran_mode_YSEXP, SEXP lognu_lowerbound_YSEXP, SEXP lognu_upperbound_YSEXP, SEXP n_grid_YSEXP, SEXP n_s_YSEXP, SEXP beta_YSEXP, SEXP n_post_samplesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Xnew(XnewSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Ynew(YnewSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_X(Omega_XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega_Y(Omega_YSEXP);
    Rcpp::traits::input_parameter< int >::type k_X(k_XSEXP);
    Rcpp::traits::input_parameter< int >::type k_Y(k_YSEXP);
    Rcpp::traits::input_parameter< double >::type rho0_X(rho0_XSEXP);
    Rcpp::traits::input_parameter< int >::type rho0_mode_X(rho0_mode_XSEXP);
    Rcpp::traits::input_parameter< double >::type rho0_Y(rho0_YSEXP);
    Rcpp::traits::input_parameter< int >::type rho0_mode_Y(rho0_mode_YSEXP);
    Rcpp::traits::input_parameter< int >::type tran_mode_Y(tran_mode_YSEXP);
    Rcpp::traits::input_parameter< double >::type lognu_lowerbound_Y(lognu_lowerbound_YSEXP);
    Rcpp::traits::input_parameter< double >::type lognu_upperbound_Y(lognu_upperbound_YSEXP);
    Rcpp::traits::input_parameter< int >::type n_grid_Y(n_grid_YSEXP);
    Rcpp::traits::input_parameter< int >::type n_s_Y(n_s_YSEXP);
    Rcpp::traits::input_parameter< double >::type beta_Y(beta_YSEXP);
    Rcpp::traits::input_parameter< int >::type n_post_samples(n_post_samplesSEXP);
    rcpp_result_gen = Rcpp::wrap(fitCondPTTcpp(X, Y, Xnew, Ynew, Omega_X, Omega_Y, k_X, k_Y, rho0_X, rho0_mode_X, rho0_Y, rho0_mode_Y, tran_mode_Y, lognu_lowerbound_Y, lognu_upperbound_Y, n_grid_Y, n_s_Y, beta_Y, n_post_samples));
    return rcpp_result_gen;
END_RCPP
}
